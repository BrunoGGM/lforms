{
  "name": "Lforms",
  "tagline": "A widget for rendering feature-rich forms defined in JSON definition files",
  "body": "## What is LForms?\r\n\r\n[LForms](https://lhncbc.nlm.nih.gov/project/lforms) is a light-weight,\r\nfeature-rich, open-source widget that creates input forms for Web-based medical\r\napplications. It was developed by the Lister Hill National Center for Biomedical\r\nCommunications ([LHNCBC](https://lhncbc.nlm.nih.gov)), National Library of\r\nMedicine ([NLM](https://www.nlm.nih.gov)),  part of the National Institutes of\r\nHealth ([NIH](https://www.nih.gov)), with the collaboration and support from the\r\n[Regenstrief Institute](https://www.regenstrief.org/), Inc. and the\r\n[LOINC](https://loinc.org/) Committee.\r\n\r\nThe LForms software is written entirely in JavaScript, using Google’s AngularJS\r\nframework, as well as some widgets developed in-house at NLM. A form is defined\r\nby listing the form questions (e.g. LOINC observations) and incorporating\r\nmetadata for each, including: data type, cardinality, default value, units of\r\nmeasure (if numeric), answer lists (if multiple choice), relationship (in a\r\nhierarchy) to other questions, validation checks, skip logic and help messages.\r\n\r\nIn LForms, questions can accept multiple answers, and groups of questions or\r\nsingle questions can repeat. LForms will generate total scores for any set of\r\nquestions whose answers have scores (e.g., Glasgow coma score). <a\r\nhref=\"#formdef\">Form definitions</a> can be specified as JSON data structures or\r\nCSV files. We have used LForms to generate Web-based forms for many LOINC panels\r\nand for AHRQ Patient Safety Event Reports.  See the [demo\r\nsite](https://lforms-demo.nlm.nih.gov) for a working example.\r\n\r\n## Installation\r\nLForms installs using the [bower](http://bower.io) package manager, i.e. `bower\r\ninstall lforms`.\r\n\r\n## Usage\r\n\r\n### HTML\r\n\r\nThe HTML in your page will look something like:\r\n\r\n    <body ng-app=\"myApp\">\r\n      <div ng-controller=\"myController\">\r\n        <lforms lf-data=\"myFormData\"></lforms>\r\n      </div>\r\n    </body>\r\n\r\nThe directive is contained by a controller (in this example named\r\n\"myController\") which will have the responsibility of providing the\r\nform definition data as a JSON object (in this example named \"myFormData\").\r\n\r\n### JavaScript\r\n\r\nIn the JavaScript for the AngularJS app, include 'lformsWidget' as a module to\r\nbe loaded. Then, in the JavaScript for the AngularJS controller, construct an\r\nLFormsData object with the JSON [form definition](#formdef) and assign that\r\nobject to the scope variable \"lfData\".  The form should initialize and display.\r\nFor example:\r\n\r\n    angular.module('myApp', ['lformsWidget'])\r\n      .controller('myController', ['$scope', function ($scope) {\r\n        $scope.myFormData = new LFormsData(myFormDefinition);\r\n      }]);\r\n\r\n### Retrieving User-Entered Data\r\n\r\nAfter the user fills out a form, the data they have entered and things like\r\ncodes for coded answer lists will be stored in the data model.  To retrieve that\r\ndata, LForms provides the following API on the LFormsData object:\r\n\r\n    $scope.myFormData.getFormData(noFormDefData, noEmptyValue, noHiddenItem)\r\n\r\nAnd if calling from outside the \"myController\", LForms.Util provides a similar API:\r\n\r\n    LForms.Util.getFormData(formElement, noFormDefData, noEmptyValue, noHiddenItem)\r\n    \r\nWith no arguments (i.e. $scope.myFormData.getFormData()), the data for the first LForm\r\nfound on that page will be returned, and will include the form definition,\r\nalong with entries for questions the user left blank and for questions that were\r\nhidden by skip-logic (which the user might not have seen).  This default return\r\nbehavior can be changed by the parameters, but in all cases the returned data\r\nwill follow the structure of the form, in that answers will be nested inside\r\ncontaining hashes representing their sections.\r\n\r\nThe parameters are:\r\n\r\n1. formElement - an HTML element that includes the LForm's rendered form. If\r\n   this is ommitted, the \"body\" tag will be used.  If there is more than one\r\n   LForm within formElement, the first found will be used.\r\n2. noFormDefData (optional, default false) - If this is true, the form\r\n   definition data will not be returned along with the data.\r\n3. noEmptyValue (optional, default false) - If this is true, items that have\r\n   an empty value will be removed.\r\n4. noHiddenItem (optional, default false) - If this is true, items that are\r\n   hidden by skip logic will be removed.\r\n\r\nAs an example, here is the data from a partially filled-in vital signs panel,\r\nreturned via `$scope.myFormData.getFormData(null, true, true, true)`:\r\n\r\n```json\r\n    {\r\n      \"itemsData\": [{\r\n        \"questionCode\": \"35094-2\",\r\n        \"items\": [{\r\n          \"questionCode\": \"8480-6\",\r\n          \"value\": \"100\",\r\n          \"unit\": {\r\n            \"name\": \"mm[Hg]\",\r\n            \"default\": false,\r\n            \"normalRange\": null,\r\n            \"absoluteRange\": null\r\n          }\r\n        }, {\r\n          \"questionCode\": \"8357-6\",\r\n          \"value\": {\r\n            \"label\": null,\r\n            \"code\": \"LA24014-5\",\r\n            \"text\": \"Oscillometry\",\r\n            \"other\": null\r\n          }\r\n        }]\r\n      }],\r\n      \"templateData\": [{\r\n        \"value\": \"2015-11-09T05:00:00.000Z\"\r\n      }]\r\n    }\r\n```\r\n\r\nThe first section in the returned data \"itemsData\" contains all of the data from\r\nthe form itself.  LForms (optionally) adds a section to the top of the form that\r\nincludes fields like \"Date\" and \"Comment\", and the data for these elements shows\r\nup in \"templateData\".  The form definition data was not included in the above\r\nexample, but you can see the structure if you look closely at itemsData.  In\r\nthis form, there was a section (question code \"35094-2\") which contained both of\r\nthe two filled-in items as data.  That is why there is just one entry in the\r\nitemsData itself, and that item has two sub-items in \"items\" array.  One of the\r\ntwo items was numeric and had an associated unit field, while the other was a\r\ncoded list field.\r\n\r\n## <a name=\"formdef\"></a>Form Definition Format\r\n\r\nForm definitions are stored in a JSON structure.  To get a rough idea of what\r\nthese are you can take a look at one of the\r\n[samples](app/data/sample-data.js), or for a detailed description see the\r\n[form definition documentation](form_definition.md).\r\n\r\n## Licensing and Copyright Notice\r\nThe LForms software employs the LOINC data model, including the LOINC table,\r\nLOINC codes, LOINC panels and forms file, which are copyrighted © 1995-2015,\r\nRegenstrief Institute, Inc. and the Logical Observation Identifiers Names and\r\nCodes (LOINC) Committee, and are available at no cost under the license at\r\nhttp://loinc.org/terms-of-use. LOINC® is a registered United States trademark of\r\nRegenstrief Institute, Inc.\r\n\r\nPlease cite as: http://lhncbc.nlm.nih.gov/project/lforms\r\n\r\nThis software is distributed under the license set forth below, which is based\r\non the BSD open-source license.\r\n\r\nNo warranty or indemnification for damages resulting from claims brought by\r\nthird parties whose proprietary rights may be infringed by your usage of this\r\nsoftware are provided by any of the owners.\r\n\r\n### NIH License\r\nOwner Notice: The Owner of this software, LForms, is the National Institutes of\r\nHealth/Department of Health and Human Services, Bethesda, MD, U.S.A. All rights\r\nreserved.\r\n\r\nThe software includes elements owned by Joyent, Inc., TJ Holowaychuk, Google,\r\nInc., Kit Cambridge, Kristopher Michael Kowal, jQuery Foundation, Twitter, Inc,\r\nThe AngularUI Team, and Karsten Sperling, who have distributed them to NIH under\r\nthe MIT open-source license.\r\n\r\nRedistribution and use in source and binary forms, with or without modification,\r\nare permitted for commercial and non-commercial purposes and products alike,\r\nprovided that the following conditions are met:\r\n* Redistributions of source code shall retain the above Owner Notice, this list\r\nof conditions and the following disclaimer.\r\n* Redistributions in binary form shall reproduce the above Owner Notice, this\r\nlist of conditions and the following disclaimer in the documentation and/or\r\nother materials provided with the distribution.\r\n* Neither the names of the National Library of Medicine (NLM), the Lister Hill\r\nNational Center for Biomedical Communications (LHNCBC), the National\r\nInstitutes of Health (NIH), nor the names of any of the software contributors\r\nmay be used to endorse or promote products derived from this software without\r\nspecific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE OWNER AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\r\nOR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\r\nSHALL THE OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\r\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\r\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\r\nOF SUCH DAMAGE.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}